import { Material, OrthographicCamera, PerspectiveCamera, Side } from 'three';
import { PassOptions } from './GPass.js';
import { GeometryPass } from './GeometryPass.js';
export declare enum DepthType {
    PERSPECTIVE_DEPTH = 0,
    LINEAR_DEPTH = 1
}
export interface DepthPassOptions extends PassOptions {
    depthType?: DepthType;
}
export declare const DefaultDepthPassOptions: Required<DepthPassOptions>;
export declare class DepthPass extends GeometryPass {
    private depthMaterial;
    _options: Required<DepthPassOptions>;
    get displayName(): string;
    get overrideMaterial(): Material;
    set options(value: DepthPassOptions);
    protected set depthType(value: DepthType);
    set depthSide(value: Side);
    constructor();
    update(camera: PerspectiveCamera | OrthographicCamera): void;
}
