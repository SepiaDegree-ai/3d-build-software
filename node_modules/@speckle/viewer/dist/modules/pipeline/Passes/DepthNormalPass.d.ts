import { Material, OrthographicCamera, PerspectiveCamera, Plane, Scene, Texture, WebGLMultipleRenderTargets, WebGLRenderer, WebGLRenderTarget } from 'three';
import { BaseGPass } from './GPass.js';
import { DepthPassOptions, DepthType } from './DepthPass.js';
import SpeckleDepthNormalMaterial from '../../materials/SpeckleDepthNormalMaterial.js';
export interface DepthNormalPassOptions extends DepthPassOptions {
}
export declare const DefaultDepthNormalPassOptions: Required<DepthNormalPassOptions>;
export declare class DepthNormalPass extends BaseGPass {
    protected mrtMaterial: SpeckleDepthNormalMaterial;
    protected mrt: WebGLMultipleRenderTargets;
    _options: Required<DepthNormalPassOptions>;
    get displayName(): string;
    get overrideMaterial(): Material;
    get depthTexture(): Texture;
    get normalTexture(): Texture;
    get outputTarget(): WebGLRenderTarget | null;
    set options(value: DepthNormalPassOptions);
    protected set depthType(value: DepthType);
    constructor();
    setClippingPlanes(planes: Plane[]): void;
    update(camera: PerspectiveCamera | OrthographicCamera): void;
    render(renderer: WebGLRenderer, camera: PerspectiveCamera | OrthographicCamera | null, scene?: Scene): boolean;
    setSize(width: number, height: number): void;
}
