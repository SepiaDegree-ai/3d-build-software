import { OrthographicCamera, PerspectiveCamera, ShaderMaterial, Texture, WebGLRenderer } from 'three';
import { BaseGPass, PassOptions } from './GPass.js';
export interface EdgePassOptions extends PassOptions {
    depthMultiplier?: number;
    depthBias?: number;
    normalMultiplier?: number;
    normalBias?: number;
    outlineThickness?: number;
    outlineDensity?: number;
    backgroundTexture?: Texture | null;
    backgroundTextureIntensity: number;
}
export declare const DefaultEdgePassOptions: Required<EdgePassOptions>;
export declare class EdgePass extends BaseGPass {
    edgesMaterial: ShaderMaterial;
    private fsQuad;
    _options: Required<EdgePassOptions>;
    set options(value: EdgePassOptions);
    constructor();
    setTexture(uName: string, texture: Texture | undefined): void;
    protected setBackground(texture: Texture | null, intensity: number): void;
    get displayName(): string;
    update(camera: PerspectiveCamera | OrthographicCamera): void;
    render(renderer: WebGLRenderer): boolean;
    setSize(width: number, height: number): void;
}
