import { OrthographicCamera, PerspectiveCamera, Plane, Scene, WebGLRenderer } from 'three';
import { BaseGPass } from './GPass.js';
import { WorldTree } from '../../tree/WorldTree.js';
import SpeckleRenderer from '../../SpeckleRenderer.js';
import { MeshBatch } from '../../batching/MeshBatch.js';
import { NodeRenderView } from '../../tree/NodeRenderView.js';
import SpeckleStandardColoredMaterial from '../../materials/SpeckleStandardColoredMaterial.js';
export declare class BasitPass extends BaseGPass {
    protected tree: WorldTree;
    protected speckleRenderer: SpeckleRenderer;
    protected materialMap: {
        [batchID: string]: [
            batch: MeshBatch,
            colorMap: Map<number, Array<NodeRenderView>>,
            material: SpeckleStandardColoredMaterial
        ];
    };
    constructor(tree: WorldTree, renderer: SpeckleRenderer);
    get displayName(): string;
    setClippingPlanes(planes: Plane[]): void;
    protected buildMaterials(): void;
    applyColorIndices(): void;
    protected overrideMaterials(): void;
    protected restoreMaterials(): void;
    render(renderer: WebGLRenderer, camera: PerspectiveCamera | OrthographicCamera | null, scene?: Scene): boolean;
}
