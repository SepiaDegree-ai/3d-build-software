import { OrthographicCamera, PerspectiveCamera, Plane } from 'three';
import { GPass } from '../Passes/GPass.js';
import { Pipeline } from './Pipeline.js';
export declare abstract class ProgressivePipeline extends Pipeline {
    protected accumulationFrameIndex: number;
    protected accumulationFrameCount: number;
    protected dynamicStage: Array<GPass>;
    protected progressiveStage: Array<GPass>;
    protected passthroughStage: Array<GPass>;
    protected accumulating: boolean;
    get passes(): Array<GPass>;
    getPass(name: string): GPass[];
    setClippingPlanes(planes: Plane[]): void;
    update(camera: PerspectiveCamera | OrthographicCamera): void;
    render(): boolean;
    reset(): void;
    resize(width: number, height: number): void;
    onStationaryBegin(): void;
    onStationaryEnd(): void;
    onAccumulationComplete(): void;
}
