import { WorkspaceRoles } from '../../core/constants.js';
import { PaidWorkspacePlans, UnpaidWorkspacePlans, WorkspacePlanBillingIntervals, WorkspacePlans } from './plans.js';
/**
 * WORKSPACE FEATURES
 */
export declare const WorkspacePlanFeatures: {
    readonly Workspace: "workspace";
    readonly RoleManagement: "roleManagement";
    readonly GuestUsers: "guestUsers";
    readonly PrivateAutomateFunctions: "privateAutomateFunctions";
    readonly DomainSecurity: "domainBasedSecurityPolicies";
    readonly PrioritySupport: "prioritySupport";
    readonly SSO: "oidcSso";
    readonly CustomDataRegion: "workspaceDataRegionSpecificity";
};
export type WorkspacePlanFeatures = (typeof WorkspacePlanFeatures)[keyof typeof WorkspacePlanFeatures];
export declare const WorkspacePlanFeaturesMetadata: {
    readonly workspace: {
        readonly displayName: "Workspace";
        readonly description: "A shared space for your team and projects";
    };
    readonly roleManagement: {
        readonly displayName: "Role management";
        readonly description: "Control individual members' access and edit rights";
    };
    readonly guestUsers: {
        readonly displayName: "Guest users";
        readonly description: (params: {
            price: number | string;
        }) => string;
    };
    readonly privateAutomateFunctions: {
        readonly displayName: "Private automate functions";
        readonly description: "Create and manage private automation functions securely within your workspace";
    };
    readonly domainBasedSecurityPolicies: {
        readonly displayName: "Domain security";
        readonly description: "Require workspace members to use a verified company email";
    };
    readonly oidcSso: {
        readonly displayName: "Single Sign-On (SSO)";
        readonly description: "Require workspace members to log in with your SSO provider";
    };
    readonly workspaceDataRegionSpecificity: {
        readonly displayName: "Custom data residency";
        readonly description: "Store the workspace data in a custom region";
    };
    readonly prioritySupport: {
        readonly displayName: "Priority support";
        readonly description: "Personal and fast support";
    };
};
/**
 * PLAN CONFIG - PRICES & FEATURES
 */
export type WorkspacePlanPriceStructure = {
    [interval in WorkspacePlanBillingIntervals]: {
        [role in WorkspaceRoles]: number;
    };
};
export type WorkspacePlanConfig<Plan extends WorkspacePlans = WorkspacePlans> = {
    plan: Plan;
    features: readonly WorkspacePlanFeatures[];
};
export declare const WorkspacePaidPlanConfigs: {
    [plan in PaidWorkspacePlans]: WorkspacePlanConfig<plan>;
};
export declare const WorkspaceUnpaidPlanConfigs: {
    [plan in UnpaidWorkspacePlans]: WorkspacePlanConfig<plan>;
};
export declare const WorkspacePlanConfigs: {
    starterInvoiced: WorkspacePlanConfig<"starterInvoiced">;
    plusInvoiced: WorkspacePlanConfig<"plusInvoiced">;
    businessInvoiced: WorkspacePlanConfig<"businessInvoiced">;
    unlimited: WorkspacePlanConfig<"unlimited">;
    academia: WorkspacePlanConfig<"academia">;
    free: WorkspacePlanConfig<"free">;
    starter: WorkspacePlanConfig<"starter">;
    plus: WorkspacePlanConfig<"plus">;
    business: WorkspacePlanConfig<"business">;
    team: WorkspacePlanConfig<"team">;
    pro: WorkspacePlanConfig<"pro">;
};
//# sourceMappingURL=features.d.ts.map