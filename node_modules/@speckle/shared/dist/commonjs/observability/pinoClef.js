"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toClefLogLevel = toClefLogLevel;
exports.toClef = toClef;
const clefLevels = {
    60: 'Fatal', // FATAL
    50: 'Error', // ERROR
    40: 'Warning', // WARN
    30: 'Information', // INFO = default when not provided
    20: 'Debug', // DEBUG
    10: 'Verbose' // TRACE / Verbose
};
function toClefLogLevel(number) {
    return {
        '@l': number in clefLevels
            ? clefLevels[number]
            : clefLevels[30]
    };
}
function toClef(log) {
    // add the stuff CLEF wants ....
    if (log.time) {
        log['@t'] = new Date(log.time).toISOString();
    }
    else {
        log['@t'] = new Date().toISOString();
    }
    if (log.level && log.level in clefLevels) {
        log['@l'] = clefLevels[log.level];
    }
    const exception = log.error || log.err;
    if (exception) {
        // Seq wants it as a string - try to prettify it with a legible stack trace
        log['@x'] = exception.stack;
    }
    return log;
}
//# sourceMappingURL=pinoClef.js.map