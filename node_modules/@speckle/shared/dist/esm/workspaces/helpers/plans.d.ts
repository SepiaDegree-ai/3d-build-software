import type { MaybeNullOrUndefined } from '../../core/helpers/utilityTypes.js';
/**
 * PLANS
 */
export declare const TrialEnabledPaidWorkspacePlans: {
    readonly Starter: "starter";
};
export type TrialEnabledPaidWorkspacePlans = (typeof TrialEnabledPaidWorkspacePlans)[keyof typeof TrialEnabledPaidWorkspacePlans];
export declare const PaidWorkspacePlansOld: {
    readonly Plus: "plus";
    readonly Business: "business";
    readonly Starter: "starter";
};
export type PaidWorkspacePlansOld = (typeof PaidWorkspacePlansOld)[keyof typeof PaidWorkspacePlansOld];
export declare const PaidWorkspacePlansNew: {
    readonly Team: "team";
    readonly Pro: "pro";
};
export type PaidWorkspacePlansNew = (typeof PaidWorkspacePlansNew)[keyof typeof PaidWorkspacePlansNew];
export declare const PaidWorkspacePlans: {
    readonly Team: "team";
    readonly Pro: "pro";
    readonly Plus: "plus";
    readonly Business: "business";
    readonly Starter: "starter";
};
export type PaidWorkspacePlans = (typeof PaidWorkspacePlans)[keyof typeof PaidWorkspacePlans];
export declare const UnpaidWorkspacePlans: {
    readonly StarterInvoiced: "starterInvoiced";
    readonly PlusInvoiced: "plusInvoiced";
    readonly BusinessInvoiced: "businessInvoiced";
    readonly Unlimited: "unlimited";
    readonly Academia: "academia";
    readonly Free: "free";
};
export type UnpaidWorkspacePlans = (typeof UnpaidWorkspacePlans)[keyof typeof UnpaidWorkspacePlans];
export declare const WorkspacePlans: {
    readonly StarterInvoiced: "starterInvoiced";
    readonly PlusInvoiced: "plusInvoiced";
    readonly BusinessInvoiced: "businessInvoiced";
    readonly Unlimited: "unlimited";
    readonly Academia: "academia";
    readonly Free: "free";
    readonly Team: "team";
    readonly Pro: "pro";
    readonly Plus: "plus";
    readonly Business: "business";
    readonly Starter: "starter";
};
export type WorkspacePlans = (typeof WorkspacePlans)[keyof typeof WorkspacePlans];
export declare const WorkspaceGuestSeatType = "guest";
export type WorkspaceGuestSeatType = typeof WorkspaceGuestSeatType;
export declare const isNewWorkspacePlan: (plan: MaybeNullOrUndefined<WorkspacePlans>) => boolean;
/**
 * BILLING INTERVALS
 */
export declare const WorkspacePlanBillingIntervals: {
    readonly Monthly: "monthly";
    readonly Yearly: "yearly";
};
export type WorkspacePlanBillingIntervals = (typeof WorkspacePlanBillingIntervals)[keyof typeof WorkspacePlanBillingIntervals];
/**
 * PLAN STATUSES
 */
export declare const UnpaidWorkspacePlanStatuses: {
    readonly Valid: "valid";
};
export type UnpaidWorkspacePlanStatuses = (typeof UnpaidWorkspacePlanStatuses)[keyof typeof UnpaidWorkspacePlanStatuses];
export declare const PaidWorkspacePlanStatuses: {
    readonly PaymentFailed: "paymentFailed";
    readonly CancelationScheduled: "cancelationScheduled";
    readonly Canceled: "canceled";
    readonly Valid: "valid";
};
export type PaidWorkspacePlanStatuses = (typeof PaidWorkspacePlanStatuses)[keyof typeof PaidWorkspacePlanStatuses];
export declare const TrialWorkspacePlanStatuses: {
    readonly Trial: "trial";
    readonly Expired: "expired";
};
export type TrialWorkspacePlanStatuses = (typeof TrialWorkspacePlanStatuses)[keyof typeof TrialWorkspacePlanStatuses];
export declare const WorkspacePlanStatuses: {
    readonly Valid: "valid";
    readonly Trial: "trial";
    readonly Expired: "expired";
    readonly PaymentFailed: "paymentFailed";
    readonly CancelationScheduled: "cancelationScheduled";
    readonly Canceled: "canceled";
};
export type WorkspacePlanStatuses = (typeof WorkspacePlanStatuses)[keyof typeof WorkspacePlanStatuses];
//# sourceMappingURL=plans.d.ts.map