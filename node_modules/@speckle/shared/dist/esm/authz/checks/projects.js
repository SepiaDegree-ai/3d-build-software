import { throwUncoveredError } from '../../core/index.js';
import { ProjectNotFoundError } from '../domain/errors.js';
import { isMinimumProjectRole } from '../domain/projects/logic.js';
export const requireExactProjectVisibilityFactory = ({ loaders }) => async (args) => {
    const { projectId, projectVisibility } = args;
    const project = await loaders.getProject({ projectId });
    if (!project)
        throw new ProjectNotFoundError({ projectId });
    switch (projectVisibility) {
        case 'linkShareable':
            return project.isDiscoverable === true;
        case 'public':
            return project.isPublic === true;
        case 'private':
            return project.isPublic !== true && project.isDiscoverable !== true;
        default:
            throwUncoveredError(projectVisibility);
    }
};
export const requireMinimumProjectRoleFactory = ({ loaders }) => async (args) => {
    const { userId, projectId, role: requiredProjectRole } = args;
    const userProjectRole = await loaders.getProjectRole({ userId, projectId });
    return userProjectRole
        ? isMinimumProjectRole(userProjectRole, requiredProjectRole)
        : false;
};
//# sourceMappingURL=projects.js.map